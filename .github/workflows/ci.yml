name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          check-latest: true
          distribution: temurin
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-maven-artifacts
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Build with Maven
        run: mvn -B verify
  publish:
    if: github.event_name == 'push' && contains(github.ref, 'main')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          check-latest: true
          distribution: temurin
          java-version: 17
          server-id: ossrh-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - uses: actions/cache@v4
        env:
          cache-name: cache-maven-artifacts
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Install XML utils
        run: sudo apt update && sudo apt install libxml2-utils
      - name: Set project version
        run: echo "PROJECT_VERSION=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml)" >> $GITHUB_ENV
      - name: Publish to the Maven Central Repository
        run: if [[ "$PROJECT_VERSION" =~ .*SNAPSHOT ]]; then mvn -B deploy; fi
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
