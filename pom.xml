<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.dbmdz.pathfinder</groupId>
  <artifactId>pathfinder-parent</artifactId>
  <packaging>pom</packaging>
  <version>2.1.1-SNAPSHOT</version>

  <modules>
    <module>pathfinder</module>
    <module>spring-boot-pathfinder</module>
  </modules>

  <name>Pathfinder</name>
  <description>Resolve paths for identifier patterns.</description>
  <url>https://github.com/dbmdz/pathfinder</url>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://github.com/dbmdz/pathfinder/blob/main/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Marcus Bitzl</name>
      <id>bitzl</id>
    </developer>
    <developer>
      <name>Christoph Lorenz</name>
      <id>clorenz</id>
    </developer>
    <developer>
      <name>Matthias Lindinger</name>
      <id>morpheus-87</id>
    </developer>
    <developer>
      <name>Ralf Eichinger</name>
      <id>datazuul</id>
    </developer>
    <developer>
      <name>Stefan Schweter</name>
      <id>stefan-it</id>
    </developer>
  </developers>
  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/dbmdz/pathfinder/actions</url>
  </ciManagement>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/dbmdz/pathfinder/issues</url>
  </issueManagement>
  <scm>
    <connection>https://github.com/dbmdz/pathfinder.git</connection>
    <developerConnection>git@github.com:dbmdz/pathfinder.git</developerConnection>
    <url>https://github.com/dbmdz/pathfinder</url>
  </scm>

  <properties>
    <javadoc.basepath>pathfinder</javadoc.basepath>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <version.assertj-core>3.23.1</version.assertj-core>
    <version.junit-jupiter>5.9.0</version.junit-jupiter>
    <!-- Plugin versions -->
    <version.fmt-maven-plugin>2.19</version.fmt-maven-plugin>
    <version.githook-maven-plugin>1.0.5</version.githook-maven-plugin>
    <version.jacoco-maven-plugin>0.8.8</version.jacoco-maven-plugin>
    <version.maven-gpg-plugin>3.0.1</version.maven-gpg-plugin>
    <version.maven-javadoc-plugin>3.4.1</version.maven-javadoc-plugin>
    <version.maven-source-plugin>3.2.1</version.maven-source-plugin>
    <version.maven-surefire-plugin>3.0.0-M7</version.maven-surefire-plugin>
    <version.nexus-staging-maven-plugin>1.6.13</version.nexus-staging-maven-plugin>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${version.assertj-core}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.junit-jupiter}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
    <plugins>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${version.fmt-maven-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.phillipuniverse</groupId>
        <artifactId>githook-maven-plugin</artifactId>
        <version>${version.githook-maven-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <hooks>
                <pre-commit>
                  if ! mvn com.spotify.fmt:fmt-maven-plugin:check ; then
                  mvn com.spotify.fmt:fmt-maven-plugin:format
                  echo -e "\e[31mCode has been reformatted to match code style\e[0m"
                  echo -e "\e[31mPlease use git add â€¦ to add modified files\e[0m"
                  echo "Your commit message was:"
                  cat .git/COMMIT_EDITMSG
                  exit 1
                  fi
                </pre-commit>
              </hooks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.maven-javadoc-plugin}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doclint>none</doclint>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.maven-source-plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jacoco-maven-plugin}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${version.nexus-staging-maven-plugin}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>ossrh-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${version.maven-gpg-plugin}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>